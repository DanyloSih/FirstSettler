#pragma kernel CSMain

struct VoxelData
{
    float Volume;
    int MaterialHash;
};

RWStructuredBuffer<VoxelData> Result;
int RegionWidth;
int RegionHeight;
int RegionDepth;
int RegionPositionX;
int RegionPositionY;
int RegionPositionZ;
int MatHash;


[numthreads(8, 8, 8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int i = id.x + id.y * RegionWidth + id.z * (RegionWidth * RegionHeight);
    int globalYPos = RegionPositionY + id.y;
    float volume = 0;
    if (globalYPos < 0)
    {
        volume = 1;
    }
    VoxelData voxel = Result[i];
    voxel.Volume = volume;
    voxel.MaterialHash = MatHash;
    Result[i] = voxel;
    
}
