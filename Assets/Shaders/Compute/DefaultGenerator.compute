#pragma kernel CSMain

struct VoxelData
{
    float Volume;
    int MaterialHash;
};

RWStructuredBuffer<VoxelData> ChunkData;
int ChunkWidth;
int ChunkHeight;
int ChunkDepth;
int ChunkGlobalPositionX;
int ChunkGlobalPositionY;
int ChunkGlobalPositionZ;
int MatHash;
float MinHeight;


[numthreads(1, 1, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int i = id.x + id.y * ChunkWidth + id.z * (ChunkWidth * ChunkHeight);
    int3 globalPos = int3(ChunkGlobalPositionX + id.x, ChunkGlobalPositionY + id.y, ChunkGlobalPositionZ + id.z);
    float volume = 0;  
    
    if (globalPos.y < MinHeight)
    {
        volume = 1;
    }
    
    VoxelData voxel;
    voxel.Volume = volume;
    voxel.MaterialHash = MatHash;
    ChunkData[i] = voxel;
    
}
